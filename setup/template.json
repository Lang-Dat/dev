"init template file":{
    "scope": "cpp",
    "isFileTemplate": true,
    "prefix": "init",
    "body": [
        "/**",
        " *\tauthor : Lăng Trọng Đạt",
        " *\tcreater: ${CURRENT_DATE}-${CURRENT_MONTH}-${CURRENT_YEAR} ${CURRENT_HOUR}:${CURRENT_MINUTE}:${CURRENT_SECOND}",
        "**/",
        "#include <iostream>",
        "#include <algorithm>$1",
        // "#include <vector>",
        "using namespace std;",
        "",
        "$2",
        "int main()",
        "{",
        "    std::ios_base::sync_with_stdio(false);",
        "    std::cin.tie(nullptr);",	
        "    freopen(\"./${TM_FILENAME_BASE}.INP\", \"r\", stdin);",
        "    freopen(\"./${TM_FILENAME_BASE}.OUT\", \"w\", stdout);",
        "",
        "    $0",
        "",
        "}",
    ],
    "description": "Khoi tao mot file moi"
},
"init template codeforce file":{
    "scope": "cpp",
    "isFileTemplate": true,
    "prefix": "init_codeforces",
    "body": [
        "/**",
        " *\tauthor: Lăng Trọng Đạt",
        " *\tcreate: ${CURRENT_DATE}-${CURRENT_MONTH}-${CURRENT_YEAR} ${CURRENT_HOUR}:${CURRENT_MINUTE}:${CURRENT_SECOND}",
        "**/",
        "#include <iostream>",
        "#include <algorithm>$1",
        "using namespace std;",
        "$2",
        "int main()",
        "{",
        "    std::ios_base::sync_with_stdio(false);",
        "    std::cin.tie(nullptr);",			
        "",
        "\tint t;",
        "\tstd::cin >> t;",
        "    $0",
        "",
        "}",
    ],
    "description": "Khoi tao mot file moi"
},
"init template for kich start, hacked cup":{
    "scope": "cpp",
    "isFileTemplate": true,
    "prefix": "init contest",
    "body": [
        "/**",
        " *\tauthor: Lăng Trọng Đạt",
        " *\tcreate: ${CURRENT_DATE}-${CURRENT_MONTH}-${CURRENT_YEAR} ${CURRENT_HOUR}:${CURRENT_MINUTE}:${CURRENT_SECOND}",
        "**/",
        "#include <bits/stdc++.h>",
        "using namespace std;",
        "$1",
        "",
        "void solve() {",
        "    $0",
        "}",
        "",
        "int main()",
        "{",
        "    std::ios_base::sync_with_stdio(false);",
        "    std::cin.tie(nullptr);",			
        "    freopen(\"./in/${2:in}.inp\", \"r\", stdin);",
        "    freopen(\"./in/${2:in}.out\", \"w\", stdout);",
        "",
        "    int T;",
        "    std::cin >> T;",
        "",
        "    for (int i = 1; i <= T; i++) {",
        "        std::cout << \"Case #\" << i << \": \";",
        "        solve();",
        "    }",
        "",
        "}",
    ],
    "description": "Khoi tao mot file moi cho contest"
},
"general test file":{
    "isFileTemplate": true,
    "scope": "cpp",
    "prefix": "test_file",
    "body": [
        "/**",
        " *\tauthor: Lăng Trọng Đạt",
        " *\tcreate: ${CURRENT_DATE}-${CURRENT_MONTH}-${CURRENT_YEAR} ${CURRENT_HOUR}:${CURRENT_MINUTE}:${CURRENT_SECOND}",
        "**/",
        "#include <testlib/testlib.h>",
        "#include <iostream>",
        "#include <chrono>",
        "#include <iomanip>",
        "#include <fstream>",
        "",
        "using namespace std;",
        "using std::chrono::high_resolution_clock;",
        "using std::chrono::duration_cast;",
        "using std::chrono::duration;",
        "",
        "const std::string NAME  = \"${1:NAME}\";",
        "const std::string FILE_IN  = NAME + \".INP\";",
        "const std::string WHITE = \"\\033[37m\", ",
        "                  GREEN = \"\\033[32m\",",
        "                  RED   = \"\\033[31m\";",
        "",
        "static const int MAX_COL = 3;",
        "int T = 10, range = 5;",
        "",
        "void generator(int range) {",
        "    ofstream file;",
        "    file.open(FILE_IN);",
        "\t$0",
        "    file.close();",
        "}",
        "",
        "int main(int argc, char* argv[])",
        "{",
        "    registerGen(argc, argv, 1);",
        "    system(\"clear\");",
        "    ",
        "    int T = atoi(argv[1]);",
        "    int range = atoi(argv[2]);",
        "",
        "    for (int i = 1; i <= T; i++) {",
        "        generator(range);",
        "",
        "        system(string(NAME + \"_trau.exe\").c_str());",
        "",
        "        auto start = high_resolution_clock::now();",
        "        system(string(NAME + \".exe\").c_str());",
        "        auto end = high_resolution_clock::now();",
        "        duration<double, std::milli> elapsed = end - start;",
        "        double time = elapsed.count() / 1000;",
        "",
        "        if (system(string(\"cmp \" + NAME + \".OUT \" + NAME + \"_trau.OUT\").c_str()) == 1) {",
        "            cout << \"Input:\\n\";",
        "            system(string(\"cat \" + FILE_IN).c_str());",
        "            quitf(_wa, \"Answer is diffrencent\");",
        "        }",
        "        ",
        "        cout << WHITE << \"Test case \" << setw(2) << i << \": \"; ",
        "        if (time >= 1.) {",
        "            string command(\"cp \" + FILE_IN + \" TLE/\" + to_string(i) + \"-[\" + to_string(time) + \"]\" + FILE_IN);",
        "            system(command.c_str());",
        "            cout << RED << \"TLE\";",
        "        } else {",
        "            cout << GREEN << \"AC\";",
        "        }",
        "        cout << WHITE << \" [\" << time << \"s]\" << \"\\t\";",
        "        if (i % MAX_COL == 0) cout << \"\\n\";",
        "    }",
        "",
        "    cout << \"\\n\\t\\t\\t\\t\\t\\033[93mThe test passed\";",
        "}",
    ]
},
"fix bug":{
    "scope": "cpp",
    "prefix": "fix",
    "body": "*\t[${CURRENT_DATE}-${CURRENT_MONTH}-${CURRENT_YEAR} ${CURRENT_HOUR}:${CURRENT_MINUTE}:$CURRENT_SECOND{}] Bug$0",
},
"input vector": {
    "prefix": "inv",
    "scope": "cpp",
    "body": [
        "int ${1:size};",
           "std::cin >> ${1:size};",
        "std::vector<int> ${2:name}(${1:size});",
        "",
        "for (int i = 0; i < n; i++)",
        "    std::cin >> ${2:name}[i];",
        "$0",
    ],
    "description": "Nhap dau vao la mot vector"
},

"input nums static array": {
    "prefix": "innums",
    "scope": "cpp",
    "body": [
           "std::cin >> ${1:n};",
        "for (int i = 0; i < n; i++) {",
        "    std::cin >> ${2:nums}[i];",
        "}",
        "$0",
    ],
    "description": "Nhap dau vao la mot static array"
},
"input cumulative array": {
    "prefix": "incumulative_array",
    "scope": "cpp",
    "body": [
        "int ${1:size};",
           "std::cin >> ${1:size};",
        "//int ${2:nums}[${1:size} + 1];",
        "${2:nums}[0] = 0;",
        "for (int i = 1; i <= n; i++) {",
        "    std::cin >> ${2:nums}[i];",
        "\t${2:nums}[i] += ${2:nums}[i-1];",
        "}",
        "$0",
    ],
    "description": "Nhap dau vao la mot static array"
},

"cout value": {
    "prefix": "out",
    "scope": "cpp",
    "body": [
        "std::cout << $1 << \"$2\";$0"
    ],
    "description": "In ra value cua mot bien"
},
"yeild limit": {
    "prefix": "LIM",
    "scope": "cpp",
    "body": [
        "static const int ${1:LIM} = ${2:1e6} + 5;",
        "static int ${3:nums}[LIM]$4;",
        "int n$0;",
        ""
    ]
},
"yeild MOD": {
    "prefix": "MOD",
    "scope": "cpp",
    "body": "static const int MOD = ${2:1e9 + 7};$0",
},
"typedef for take all element in contaner": {
    "prefix": "all",
    "scope": "cpp",
    "body": "${1:v}.begin(), ${1:v}.end()"
},
"input variable": {
    "prefix": "in",
    "scope": "cpp",
    "body": "std::cin >> "
},
"init integer vector": {
    "prefix": "vi",
    "scope": "cpp",
    "body": "std::vector<${1:int}> ${2:v};",
    "description": "init integer vector"
},
"init char vector": {
    "prefix": "vi",
    "scope": "cpp",
    "body": "std::vector<char> ${1:v};",
    "description": "init char vector"
},
"init matrix vector": {
    "prefix": "mvi",
    "scope": "cpp",
    "body": "std::vector<std::vector<int>> ${1:matrix};",
    "description": "init matrix vector"
},
"init map int int": {
    "prefix": "mpii",
    "scope": "cpp",
    "body": "std::map<int, int> ${1:freq};",
    "description": "init map int"
},
"init map char int": {
    "prefix": "mpci",
    "scope": "cpp",
    "body": "std::map<char, int> ${1:freq};",
    "description": "init map char int"
},
"init unordered_map int int": {
    "prefix": "umpii",
    "scope": "cpp",
    "body": "std::unordered_map<int, int> ${1:freq};",
    "description": "init unordered_map int"
},
"init set int": {
    "prefix": "si",
    "scope": "cpp",
    "body": "std::set<int> ${1:s};",
    "description": "init map int"
},
"init unordered_set int": {
    "prefix": "usi",
    "scope": "cpp",
    "body": "std::unordered_set<int> ${1:s};",
    "description": "init unordered_set int"
},
"init unordered_map char int": {
    "prefix": "mpci",
    "scope": "cpp",
    "body": "std::unordered_map<char, int> ${1:freq};",
    "description": "init unordered_map char int"
},
"check char is alphabet": {
    "prefix": "is_alphabet",
    "scope": "cpp",
    "body": "(${1:c} >= 'a' && ${1:c} <= 'z') || (${1:c} >= 'A' && ${1:c} <= 'Z')"
}