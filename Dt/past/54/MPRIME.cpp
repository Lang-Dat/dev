/**
 *	author: Lang Dat
 *	create: 12.10.2022 44.29.19
**/
#include <iostream>
#include <math.h>
#include <algorithm>
#include <vector>
using namespace std;

#define ull unsigned long long

const int LIM = 1e6;
bool isNotPrime[LIM];
void sieve(int n) {
    for (int i = 2; i * i <= n; i++) {
        if (!isNotPrime[i]) {
            for (int j = i * i; j <= n; j += i) {
                isNotPrime[j] = true;
            }
        }
    }
}

std::vector<int> num_to_v(int n, std::vector<int> v = {}) {
    while (n > 0) {
        v.push_back(n % 10);
        n /= 10;
    }
    reverse(v.begin(), v.end());
    return v;
}

bool isPrime(ull n) {
    if (n <= 3) return n > 1;
    if (n % 2 == 0 || n % 3 == 0) return false;
    for (int i = 5; i <= sqrt(n); i += 6)
        if (n % i == 0 || n % (i + 2) == 0) return false;
    return true;
}

int main()
{
    std::ios_base::sync_with_stdio(false);
    std::cin.tie(nullptr);
    // freopen("./MPRIME.INP", "r", stdin);
    freopen("./MPRIME.OUT", "w", stdout);

    // ull tmp; // n < 500
    // int n;
    // std::vector<int> prev = {2}, curr;
    // std::cin >> n;
    // sieve(LIM);
    // for (int i = 3; n > 0; i += 2) {
    //     if (!isNotPrime[i]) {
    //         curr.clear();
    //         curr = num_to_v(i);
    //         tmp = 0;
    //         for (int i : prev) tmp = tmp * 10 + i;
    //         prev.clear();
    //         for (int i : curr) {
    //             tmp = tmp * 10 + i;
    //             prev.push_back(i);
    //         }
    //         if (isPrime(tmp)) {
    //             std::cout << tmp << ",";
    //             n--;
    //         }
    //     }
    // } 
    
    ull ans[] = {23,3137,8389,151157,157163,167173,199211,233239,251257,257263,263269,271277,331337,353359,373379,433439,467479,509521,523541,541547,601607,653659,661673,677683,727733,941947,971977,10131019,10331039,11811187,11871193,12011213,12231229,12591277,13671373,14531459,14591471,16571663,16691693,17091721,17411747,18611867,19731979,20692081,21612179,21792203,22072213,22812287,23332339,23932399,24412447,25032521,26212633,26712677,28972903,29632969,30673079,32593271,33473359,36373643,37613767,40994111,42834289,43974409,46034621,46794691,47334751,47594783,49194931,49934999,52975303,55575563,56835689,58075813,59275939,63536359,63976421,65296547,65636569,68576863,69776983,71597177,73937411,75617573,75837589,76217639,76817687,78237829,78837901,79017907,79077919,80698081,81238147,81918209,84618467,85218527,87618779,88318837,90439049,90679091,91819187,91879199,92219227,92939311,96019613,96239629,96499661,97699781,98519857,1028910301,1071110723,1086110867,1139311399,1139911411,1171911731,1173111743,1207312097,1219712203,1228912301,1232312329,1237912391,1245112457,1254712553,1272112739,1303713043,1317713183,1346313469,1361313619,1368113687,1384113859,1393313963,1424314249,1446114479,1453714543,1471714723,1473114737,1474714753,1519915217,1524115259,1533115349,1537715383,1560115607,1560715619,1574915761,1576715773,1590715913,1638116411,1641116417,1642716433,1669316699,1674116747,1674716759,1678716811,1690316921,1693116937,1705317077,1719117203,1729917317,1735917377,1753917551,1783917851,1795917971,1812118127,1823318251,1826918287,1832918341,1834118353,1843318439,1871918731,1889918911,1901319031,1903119037,1921319219,1928919301,1957719583,1960319609,1973919751,1986119867,1991319919,2002920047,2010120107,2071920731,2078920807,2112121139,2116321169,2122121227,2140121407,2175121757,2178721799,2191121929,2199722003,2205122063,2207322079,2217122189,2236922381,2254322549,2269122697,2275122769,2287722901,2304123053,2376723773,2380123813,2385723869,2404924061,2407124077,2409724103,2415124169,2425124281,2428124317,2511125117,2512125127,2517125183,2530925321,2541125423,2544725453,2545725463,2560325609,2566725673,2584925867,2617726183,2620326209,2632126339,2639326399,2650126513,2653926557,2672326729,2678326801,2703127043,2706727073,2714327179,2729927329,2750927527,2779327799,2811128123,2828328289,2831928349,2840328409,2854128547,2859728603,2862128627,2880728813,2892728933,2912329129,2917929191,2933329339,2971729723,2992129927,3044930467,3051730529,3088130893,3097130977,3101331019,3105131063,3109131121,3115331159,3165731663,3179931817,3199132003,3206332069,3207732083,3218332189,3230332309,3234132353,3237132377,3247932491,3257332579,3260332609,3262132633,3268732693,3283332839,3291132917,3350333521,3360133613,3362333629,3403934057,3426134267,3451334519,3459134603,3468734693,3491334919,3496334981,3498135023,3526735279,3531735323,3540135407,3544935461,3559735603,3586335869,3596335969,3643336451,3665336671,3669136697,3674936761,3676736779,3680936821,3692336929,3699737003,3736337369,3739737409,3751137517,3760737619,3765737663,3828138287,3856138567,3863938651,3869338699,3923339239,3925139293,3930139313,3955139563,3984139847,3986339869,4017740189,4028940343,4045940471,4047140483,4059140597,4059740609,4060940627,4073940751,4093340939,4099341011,4122141227,4126941281,4139941411,4154941579,4161141617,4204342061,4218742193,4222742239,4225742281,4233142337,4245142457,4246742473,4273742743,4279742821,4323743261,4327143283,4348143487,4354343573,4362743633,4375343759,4396343969,4402144027,4402944041,4450144507,4475344771,4492744939,4508345119,4524745259,4537745389,4543345439,4555745569,4561345631,4582745833,4615346171,4639946411,4647746489,4651146523,4664346649,4690146919,4730347309,4744147459,4752147527,4756347569,4756947581,4801748023,4802348029,4824748259,4834148353,4887148883,4910349109,4917149177,4921149223,4922349253,4949949523,4952349529,4959749603,4963349639,4966949681,4987149877,5008750093,5017750207,5022150227,5042350441,5046150497,5054350549,5059350599,5077750789,5125751263,5143151437,5148151487,5152151539,5171351719,5185351859,5230152313,5291952937,5296752973,5305153069,5371953731,5377753783,5381353819,5413354139,5443754443,5466754673,5479954829,5497354979,5498355001,5500955021,5520755213,5584355849,5594955967,5609356099,5626956299,5659956611,5668156687,5682156827,5687356891,5704157047,5704757059,5734957367,5750357527,5773157737,5780357809,5841158417,5856758573,5861358631,5869358699,5899158997,5922159233,5956159567,5974759753,5995159957,6001760029,6116961211,6147161483,6155361559,6172361729,6187961909,6238362401,6242362459,6259762603,6263362639,6336163367,6337763389,6346763473,6352763533,6362963647,6401364019,6428364301,6438164399,6479364811,6481164817,6487964891,6512365129,6541365419,6555765563,6599366029,6654166553,6665366683,6680966821,6707967103,6716967181,6728967307,6734367349,6742167427,6744767453,6751167523,6753167537,6754767559,6760167607,6761967631,6796767979,6804168053,6809968111,6817168207,6843768443,6869968711,6896368993,6903169061,6955769593,6959369623,6982169827,7006770079,7020170207,7048170487,7072970753,7087970891,7129371317,7134771353,7136371387,7143771443,7184971861,7230772313,7234172353,7236772379,7268972701,7290172907,7301373019,7318973237};
    int n;
    std::cin >> n;
    std::cout << ans[n-1];
    return 0;
}